import{_ as i,c as n,b as a,e,a as l,o as p,r}from"./app-DeWhPSCw.js";const o={};function c(d,t){const s=r("Badge");return p(),n("div",null,[a("ul",null,[a("li",null,[e(s,{type:"cimportant",text:"是否需要网络：不能确定"})]),a("li",null,[e(s,{type:"tip",text:"是否需要申请API Key：不能确定"})]),a("li",null,[e(s,{type:"warning",text:"支持的翻译模式：图片"})]),a("li",null,[e(s,{type:"danger",text:"翻译质量：不能确定"})])]),t[0]||(t[0]=l(`<div class="hint-container important"><p class="hint-container-title">未完善</p><p>下面的文档只是草案，还没有进行进一步的撰写。</p><img src="https://img.moetranslate.top/under_construction.png" width="35%"></div><div class="hint-container important"><p class="hint-container-title">重要</p><p>这是一个高级功能，需要您了解基本的API调用知识。</p></div><h2 id="一、基本说明" tabindex="-1"><a class="header-anchor" href="#一、基本说明"><span>一、基本说明</span></a></h2><p>此功能允许您配置自己的<b>图片翻译API</b>，支持GET和POST两种请求方式（对于图片翻译，POST的Content-Type可以是“application/json; charset=utf-8”或“multipart/form-data”，只需在Content-Type选择框中选择，<b>不需</b>重复显式填写在下面的请求头中）。所有API响应必须为JSON格式。</p><h2 id="二、使用场景" tabindex="-1"><a class="header-anchor" href="#二、使用场景"><span>二、使用场景</span></a></h2><p>一般来说，由于各大翻译API提供商都有自己的签名算法，无法通过简单的GET/POST请求接入，因此实际上自定义图片翻译API可以接入的商用API接口数量有限，更贴合实际的使用场景为接入自己搭建的翻译API接口。</p><h2 id="三、参数说明" tabindex="-1"><a class="header-anchor" href="#三、参数说明"><span>三、参数说明</span></a></h2><p>1、请求方法：可以为GET或POST<br> 2、Content-Type（仅POST）：可以为“application/json”或“multipart/form-data”<br> 3、基础URL：可指定http或https，如不指定scheme，则默认为https<br> 4、查询参数（仅GET）：附加于基础URL之后的参数<br> 5、请求头：发送请求时的头部<br> 6、请求体（仅POST）：发送请求时附带的内容<br> 7、JSON响应路径：调用API后，从响应的JSON中获取翻译结果的路径</p><p>注意：<br> 1、在“查询参数”和“Content-Type为‘application/json’的请求体”中，<b>使用“useimgbase64”代表待翻译的图片文件</b>；<br> 2、在“Content-Type为‘multipart/form-data’的请求体”中，<b>使用“useimgfile”代表待翻译的图片文件</b>；<br> 3、同时请注意，务必将“源语言”和“目标语言”的语言代码包含在“查询参数”或“请求体”中。</p><h2 id="四、请求示例" tabindex="-1"><a class="header-anchor" href="#四、请求示例"><span>四、请求示例</span></a></h2><p><b>GET请求</b><br> 基础URL：<br> https://api.example.com/translate</p><p>查询参数：<br> key：img，value：useimgbase64；<br> key：source，value：ja；<br> key：target，value：zh</p><p>请求头： Authorization = my_custom_token</p><p><b>POST请求</b><br> Content-Type:<br> application/json</p><p>基础URL：<br> https://api.example.com/translate</p><p>请求头：<br> Authorization = my_custom_token</p><p>请求体:<br> key：img，value：useimgbase64；<br> key：source，value：ja；<br> key：target，value：zh</p><p><b>POST请求</b><br> Content-Type:<br> multipart/form-data</p><p>基础URL：<br> https://api.example.com/translate</p><p>请求头：<br> Authorization = my_custom_token</p><p>请求体:<br> key：img，value：useimgfile；<br> key：source，value：ja；<br> key：target，value：zh</p><h2 id="五、json响应路径" tabindex="-1"><a class="header-anchor" href="#五、json响应路径"><span>五、JSON响应路径</span></a></h2><p><b>举例1：</b><br> 假设成功响应的JSON如下：</p><div class="language-md line-numbers-mode" data-ext="md" data-title="md"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">{</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    &quot;code&quot;: 0,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    &quot;msg&quot;: &quot;success&quot;,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    &quot;data&quot;: {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        &quot;translation&quot;: &quot;你好世界&quot;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>则JSON响应路径应填写：<code>data.translation</code></p><p><b>举例2：</b><br> 假设成功响应的JSON如下：</p><div class="language-md line-numbers-mode" data-ext="md" data-title="md"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">{</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    &quot;code&quot;: 0,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    &quot;msg&quot;: &quot;success&quot;,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    &quot;result&quot;: &quot;你好世界&quot;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>则JSON响应路径应填写：<code>result</code></p><h2 id="六、在使用该功能之前" tabindex="-1"><a class="header-anchor" href="#六、在使用该功能之前"><span>六、在使用该功能之前</span></a></h2><p>您可以先使用Postman、Reqable等工具测试API响应，待测试成功后再将相关参数填入该功能中。</p>`,30))])}const h=i(o,[["render",c],["__file","index.html.vue"]]),m=JSON.parse('{"path":"/docs/translationapi/custompic/","title":"自定义图片API","lang":"zh-CN","frontmatter":{"title":"自定义图片API","createTime":"2025/01/22 20:22:41","permalink":"/docs/translationapi/custompic/"},"headers":[],"readingTime":{"minutes":2.49,"words":748},"git":{"updatedTime":1739966703000,"contributors":[{"name":"azuki","email":"azuki.yang@foxmail.com","commits":5,"avatar":"https://avatars.githubusercontent.com/azuki?v=4","url":"https://github.com/azuki"},{"name":"azuki","email":"448117151@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/azuki?v=4","url":"https://github.com/azuki"}]},"filePathRelative":"notes/docs/translationapi/自定义图片API.md","bulletin":false}');export{h as comp,m as data};
